[{"functionId":"test","functionNameJP":"テストコード","functionNameEN":"test","beforeCode":"","innerCode":"\n","afterCode":"","parametersName":[],"parametersDataType":[],"returnValue":"void"},{"functionNameJP":"データ移行","functionNameEN":"transferData","parametersName":["processName"],"parametersDataType":["TEXT"],"returnValue":"string","functionId":"01HP645KD6858XWT517DP8FP7Y","beforeCode":"\n\n\n","innerCode":"\n  switch( processName ){\n    case \"学部マスタ\":\n      return await masterFaculty_core();\n    case \"教室マスタ\":\n      return await masterLab_core();\n    case \"実験者マスタ\":\n      return await masterUser_core();\n    case \"動物種マスタ\":\n      return await masterSpecies_core();\n    case \"系統マスタ\":\n      return await masterPhylogeny_core();\n    case \"由来マスタ\":\n      return await masterOrigin_core();\n    case \"購入規格マスタ\":\n      return await masterProductType_core();\n    case \"購入品マスタ\":\n      return await masterItem_core();\n    case \"業者マスタ\":\n      return await masterCompany_core();\n    case \"支払マスタ\":\n      return await masterPayment_core();\n    case \"Roomマスタ\":\n      return await masterRoom_core();\n    case \"管理費単価マスタ\":\n      return await masterPrice_core();\n    case \"飼育台帳データ\":\n      return await broodbookData_core();\n    case \"飼育履歴データ\":\n      return await historyData_core();\n    case \"動物増減データ\":\n      return await increaseAndDecreaseData_core();\n    case \"飼育数データ\":\n      return await numberOfAnimalData_core();\n    case \"予算実績データ\":\n      return await budgetData_core();\n    case \"請求データ\":\n      return await billData_core();\n    case \"購入データ\":\n      return await buyData_core();\n    default:\n      throw \"データを移行しようとしましたが失敗しました。サポートされていない処理名です。\";\n  }\n","afterCode":""},{"functionNameJP":"学部マスタ","functionNameEN":"masterFaculty","parametersName":[],"parametersDataType":[],"returnValue":"void","functionId":"01HPDH715EK2XHF321BNYVJ03B","beforeCode":"\n\n\n","innerCode":"\n  // 処理に必要なテーブルが揃っているかをチェックする\n  await _checkSourceTable_core([ \"CSV_教室マスタ\" ]);\n  //\n  // 結果を書き込むテーブルとカラムを準備する\n  const t1 = await _clearTable_core(\"学部マスタ\");\n  await createColumn( t1, \"学部名\", \"TEXT\", null );\n  //\n  // データを移行する\n  await runSqlWriteOnly(\n    `INSERT INTO 学部マスタ (\n        学部名,\n        sort_number,\n        created_at,\n        updated_at\n      ) SELECT\n          列2,\n          MAX(sort_number),\n          MAX(created_at),\n          MAX(updated_at)\n        FROM CSV_教室マスタ\n        GROUP BY 列2;`,\n    {},\n  );\n  return \"データの移行が完了しました。\";\n","afterCode":""},{"functionNameJP":"教室マスタ","functionNameEN":"masterLab","parametersName":[],"parametersDataType":[],"returnValue":"void","functionId":"01HPDHCKKWTHK35GZG7S1KKWBY","beforeCode":"\n\n","innerCode":"\n  // 処理に必要なテーブルが揃っているかをチェックする\n  await _checkSourceTable_core([ \"CSV_教室マスタ\" ]);\n  //\n  // 結果を書き込むテーブルとカラムを準備する\n  const t1 = await _clearTable_core(\"教室マスタ\");\n  await createColumn( t1, \"所属学部\", \"TEXT\", null );\n  //\n  // データを移行する\n  await runSqlWriteOnly(\n    `INSERT INTO 教室マスタ (\n        学部名,\n        sort_number,\n        created_at,\n        updated_at\n      ) SELECT\n          列2,\n          MAX(sort_number),\n          MAX(created_at),\n          MAX(updated_at)\n        FROM CSV_教室マスタ\n        GROUP BY 列2;`,\n    {},\n  );\n  //\n  // 不要になったテーブルを削除する\n  await deleteTable(\"CSV_教室マスタ\");\n  return \"データの移行が完了しました。\";\n","afterCode":""},{"functionNameJP":"実験者マスタ","functionNameEN":"masterUser","parametersName":[],"parametersDataType":[],"returnValue":"void","functionId":"01HPDHFAFK0654NF7W7TSTVPC2","beforeCode":"\n\n","innerCode":"\n  return \"データの移行が完了しました。\";\n","afterCode":""},{"functionNameJP":"動物種マスタ","functionNameEN":"masterSpecies","parametersName":[],"parametersDataType":[],"returnValue":"void","functionId":"01HPDHG2GY80152M4ZMK0ZTTMS","beforeCode":"\n\n","innerCode":"\n  return \"データの移行が完了しました。\";\n","afterCode":""},{"functionNameJP":"系統マスタ","functionNameEN":"masterPhylogeny","parametersName":[],"parametersDataType":[],"returnValue":"void","functionId":"01HPDHHH0CYG31EJDYH8H76Q8G","beforeCode":"\n\n","innerCode":"\n  return \"データの移行が完了しました。\";\n","afterCode":""},{"functionNameJP":"由来マスタ","functionNameEN":"masterOrigin","parametersName":[],"parametersDataType":[],"returnValue":"void","functionId":"01HPDHY9ZW5R3EPE6V9V8CXZSQ","beforeCode":"\n\n","innerCode":"\n  return \"データの移行が完了しました。\";\n","afterCode":""},{"functionNameJP":"購入規格マスタ","functionNameEN":"masterProductType","parametersName":[],"parametersDataType":[],"returnValue":"void","functionId":"01HPDHZDN5XSDEBH5X9GT424FA","beforeCode":"\n\n","innerCode":"\n  return \"データの移行が完了しました。\";\n","afterCode":""},{"functionNameJP":"購入品マスタ","functionNameEN":"masterItem","parametersName":[],"parametersDataType":[],"returnValue":"void","functionId":"01HPDHZMVBHDM99PPA1YY90JRS","beforeCode":"\n\n","innerCode":"\n  return \"データの移行が完了しました。\";\n","afterCode":""},{"functionNameJP":"業者マスタ","functionNameEN":"masterCompany","parametersName":[],"parametersDataType":[],"returnValue":"void","functionId":"01HPDJ053N5JDM11A7919VMZ7W","beforeCode":"\n\n","innerCode":"\n  return \"データの移行が完了しました。\";\n","afterCode":""},{"functionNameJP":"支払マスタ","functionNameEN":"masterPayment","parametersName":[],"parametersDataType":[],"returnValue":"void","functionId":"01HPDJ0T177EYNZAYKD0M6RT4K","beforeCode":"\n\n","innerCode":"\n  return \"データの移行が完了しました。\";\n","afterCode":""},{"functionNameJP":"Roomマスタ","functionNameEN":"masterRoom","parametersName":[],"parametersDataType":[],"returnValue":"void","functionId":"01HPDJ177WKK2N4B8MD3CRXN3Q","beforeCode":"\n\n","innerCode":"\n  return \"データの移行が完了しました。\";\n","afterCode":""},{"functionNameJP":"管理費単価マスタ","functionNameEN":"masterPrice","parametersName":[],"parametersDataType":[],"returnValue":"void","functionId":"01HPDJ1SVKZ134P58GKMZ3BEP5","beforeCode":"\n\n","innerCode":"\n  return \"データの移行が完了しました。\";\n","afterCode":""},{"functionNameJP":"飼育台帳データ","functionNameEN":"broodbookData","parametersName":[],"parametersDataType":[],"returnValue":"void","functionId":"01HPDJ4602NY3VV8N9AWF36F1A","beforeCode":"\n\n","innerCode":"\n  return \"データの移行が完了しました。\";\n","afterCode":""},{"functionNameJP":"飼育履歴データ","functionNameEN":"historyData","parametersName":[],"parametersDataType":[],"returnValue":"void","functionId":"01HPDJ57NAC2AD9786E2R0MGQT","beforeCode":"\n\n","innerCode":"\n  return \"データの移行が完了しました。\";\n","afterCode":""},{"functionNameJP":"動物増減データ","functionNameEN":"increaseAndDecreaseData","parametersName":[],"parametersDataType":[],"returnValue":"void","functionId":"01HPDJAJPY4YBWRJMGJGJMBDKP","beforeCode":"\n\n","innerCode":"\n  return \"データの移行が完了しました。\";\n","afterCode":""},{"functionNameJP":"飼育数データ","functionNameEN":"numberOfAnimalData","parametersName":[],"parametersDataType":[],"returnValue":"void","functionId":"01HPDJEMNXTA5Y1JK601MNJ16M","beforeCode":"\n\n","innerCode":"\n  return \"データの移行が完了しました。\";\n","afterCode":""},{"functionNameJP":"予算実績データ","functionNameEN":"budgetData","parametersName":[],"parametersDataType":[],"returnValue":"void","functionId":"01HPDJFPNCBWJYP941MN7J22W8","beforeCode":"\n\n","innerCode":"\n  return \"データの移行が完了しました。\";\n","afterCode":""},{"functionNameJP":"請求データ","functionNameEN":"billData","parametersName":[],"parametersDataType":[],"returnValue":"void","functionId":"01HPDJJA3G1EGFS6Q5P55T9EY4","beforeCode":"\n\n","innerCode":"\n  return \"データの移行が完了しました。\";\n","afterCode":""},{"functionNameJP":"購入データ","functionNameEN":"buyData","parametersName":[],"parametersDataType":[],"returnValue":"void","functionId":"01HPDJK8PC3GVN4AD31GQYJ17M","beforeCode":"\n\n","innerCode":"\n  return \"データの移行が完了しました。\";\n","afterCode":""},{"functionNameJP":"【サブ】テーブルを作り直す","functionNameEN":"_clearTable","parametersName":["tableName"],"parametersDataType":["string"],"returnValue":"string","functionId":"01HPDYBDNB3QHQ6D1M11HK9GYB","beforeCode":"\n\n","innerCode":"\n  const oldTableId = await getTableIdFromName(tableName);\n  if( oldTableId ){\n    await deleteTable(oldTableId);\n  }\n  const { tableId: newTableId } = await createTable(tableName);\n  return newTableId;\n","afterCode":""},{"functionNameJP":"【サブ】テーブルの存在をチェックする","functionNameEN":"_checkSourceTable","parametersName":["tableNames"],"parametersDataType":[["string"]],"returnValue":"void","functionId":"01HPDZ7KZCS2P4KBJZPV7HN5HE","beforeCode":"\n\n","innerCode":"\n  for( const tableName of tableNames ){\n    if(!await getTableIdFromName(tableName)){\n      if(String(tableName).startsWith(\"CSV_\")){\n        throw `テーブル「${tableName}」が存在しません。先にCSVファイルをアップロードしてください。`;\n      }\n      else{\n        throw `テーブル「${tableName}」が存在しません。先にマスターデータを構築してください。`;\n      }\n    }\n  }\n","afterCode":"\n"}]