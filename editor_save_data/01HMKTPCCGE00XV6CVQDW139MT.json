[{"functionId":"test","functionNameJP":"テストコード","functionNameEN":"test","beforeCode":"","innerCode":"\n  await startUp(\"http://localhost:3000/\", true);\n  await runApi(\"GET\",\"/default/api_doc/detail\",{\"endpoint\":\"/default/tables\"},{},true,false);\n  await runApi(\"GET\",\"/default/api_doc\",{},{},true,false);\n  await runApi(\"GET\",\"/default/tables\",{},{},true,true);\n  await close();\n","afterCode":"","parametersName":[],"parametersDataType":[],"returnValue":"void"},{"functionNameJP":"APIを実行する関数","functionNameEN":"runApi","parametersName":["httpMethod","endpointPath","queryParameters","requestBody","isRequestFormData","isResponseFormData"],"parametersDataType":["string","string",{"string":"any"},{"string":"any"},"boolean","boolean"],"returnValue":"any","functionId":"01HMKTPP6DR4SEMGN1NTNFATAE","beforeCode":"\n\n\n","innerCode":"\n    if (endpointPath === \"/default/api_doc/detail\") {\n        // APIの詳細な仕様を返す\n        if (isResponseFormData) {\n            throw `API仕様書は、JSONのみで提供しています。`;\n        }\n        const infoJson = await getEndpointInfo( queryParameters?.endpoint, false, false );\n        const infoForm = await getEndpointInfo( queryParameters?.endpoint, true, true );\n        const newInfo = {\n            ...infoJson,\n            //-------------------------------------------------------\n            queryParameters: infoJson.queryParameters,\n            queryParametersExample: \"?\" + _getExampleUrlencoded(infoJson.queryParameters),\n            //-------------------------------------------------------\n            requestJson: {\n                ...infoJson.requestBody,\n            },\n            requestJsonExample: _getExampleJson(infoJson.requestBody),\n            //-------------------------------------------------------\n            requestForm: {\n                ...infoForm.requestBody,\n            },\n            requestFormExample: _getExampleUrlencoded(infoForm.requestBody),\n            //-------------------------------------------------------\n            responseJson: _convertResponseInfo({\n                endpointPath,\n                oldResponseInfo: infoJson.response,\n            }),\n            responseJsonExample: _getExampleJson(infoJson.response),\n            //-------------------------------------------------------\n            responseForm: {\n                ...infoForm.response,\n            },\n            responseFormExample: _getExampleUrlencoded(infoForm.response),\n            //-------------------------------------------------------\n        };\n        delete newInfo.requestBody;\n        delete newInfo.response;\n        return newInfo;\n    }\n    else if (endpointPath === \"/default/api_doc\") {\n        // APIエンドポイントの一覧を返す\n        return await listEndpoints();\n    }\n    else {\n        // 通常動作\n        return await runApi( httpMethod, endpointPath, queryParameters, requestBody, isRequestFormData, isResponseFormData );\n    }\n","afterCode":"\n\n\n\nfunction _getExampleJson(info) {\n    const exampleJson = {};\n    for (const parentKey in info) {\n        const parentInfo = info[parentKey];\n        if (parentKey.endsWith(\"_option\")) {\n            exampleJson[parentKey] = [\n                parentInfo.example,\n                parentInfo.example,\n                parentInfo.example,\n            ];\n        }\n        else if (parentInfo.isArray) {\n            exampleJson[parentKey] = [\n                {},\n            ];\n            for (const childKey in parentInfo.children) {\n                const childInfo = parentInfo.children[childKey];\n                if (childInfo.example === null || childInfo.example === undefined) {\n                    throw `記入例(example)が未定義です。key=\"${parentKey}[0].${childKey}\"`;\n                }\n                exampleJson[parentKey][0][childKey] = childInfo.example;\n            }\n        }\n        else {\n            if (parentInfo.example === null || parentInfo.example === undefined) {\n                throw `記入例(example)が未定義です。key=${parentKey}`;\n            }\n            exampleJson[parentKey] = parentInfo.example;\n        }\n    }\n    return exampleJson;\n}\n\n\n\n\nfunction _getExampleUrlencoded(info) {\n    const rows = [];\n    for (const key in info) {\n        const paramInfo = info[key];\n        if (paramInfo.isArray) {\n            throw `formDataに配列が含まれています。key=${key}`;\n        }\n        if (paramInfo.example === null || paramInfo.example === undefined) {\n            throw `記入例(example)が未定義です。key=${key}`;\n        }\n        const text = key + \"=\" + paramInfo.example;\n        rows.push(text);\n    }\n    return rows.join(\"\\n&\");\n}\n\n\nfunction _convertResponseInfo({ endpointPath, oldResponseInfo }) {\n    const newResponseInfo = {};\n    for (const parentKey in oldResponseInfo) {\n        const parentInfo = oldResponseInfo[parentKey];\n        if (!parentInfo || typeof parentInfo !== 'object') {\n            throw `レスポンスの仕様が未定義です。endpointPath=\"${endpointPath}\", key=\"${parentKey}\"`;\n        }\n        if( parentKey.endsWith(\"_option\") ){\n            // 予測変換の場合\n            newResponseInfo[parentKey] = {\n                ...parentInfo,\n                dataType: parentInfo.dataType + \"の配列\",\n            };\n            continue;\n        }\n        if (!parentInfo.isArray) {\n            // 配列ではない場合\n            newResponseInfo[parentKey] = parentInfo;\n            continue;\n        }\n        // 配列の場合\n        if (!parentInfo.children || typeof parentInfo.children !== 'object') {\n            throw `レスポンスデータの仕様が未定義です。endpointPath=\"${endpointPath}\", key=\"${parentKey}.children\"`;\n        }\n        for (const childKey in parentInfo.children) {\n            const childInfo = parentInfo.children[childKey];\n            if( childKey.endsWith(\"_option\") ){\n                // 予測変換の場合\n                newResponseInfo[parentKey][childKey] = {\n                    ...childInfo,\n                    dataType: childInfo.dataType + \"の配列\",\n                };\n            }\n        }\n    }\n    return newResponseInfo;\n}\n"}]