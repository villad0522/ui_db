[{"functionId":"test","functionNameJP":"テストコード","functionNameEN":"test","beforeCode":"","innerCode":"\n    await startUp(\"http://localhost:3000/\", true);\n    await close();\n","afterCode":"","parametersName":[],"parametersDataType":[],"returnValue":"void"},{"functionNameJP":"プログラム起動","functionNameEN":"startUp","parametersName":["localUrl","isDebug"],"parametersDataType":["string_nullable","boolean"],"returnValue":"void","functionId":"01HM3F8XKW1HFKGW5H7RFMYD0C","beforeCode":"\n\nimport path from 'path';\nimport fs from 'fs';\n\n\n","innerCode":"\n    await startUp( localUrl, isDebug );   // 下層の関数を呼び出す\n    //\n    await reserveWord(\"excel_templates\"); // 予約語に登録\n    await runSqlWriteOnly(\n        `CREATE TABLE IF NOT EXISTS excel_templates (\n            \"page_id\" INTEGER PRIMARY KEY,\n            \"excel_file_data\" BLOB\n        );`,\n        {},\n    );\n","afterCode":""},{"functionNameJP":"不可逆的にテンプレートを削除","functionNameEN":"deleteTemplate","parametersName":["templateId"],"parametersDataType":["string"],"returnValue":"string","functionId":"01HM3FBB33TCXTHW0Y5B2A3T0H","beforeCode":"\n\n\n","innerCode":"\n    await runSqlWriteOnly(\n        `DELETE FROM excel_templates\n            WHERE template_id = :templateNumber;`,\n        {\n            \":templateNumber\": templateId.replace(\"t\",\"\"),\n        },\n    );\n    await _reload();    // メモリに再読み込み\n    return await deleteTemplate( templateId );  // 下層の関数を実行する\n","afterCode":""},{"functionNameJP":"Excelテンプレートを取得","functionNameEN":"getExcelTemplate","parametersName":["pageId"],"parametersDataType":["number"],"returnValue":"any","functionId":"01HM922PPCJVX86SGF68VCBDDH","beforeCode":"\n\n\n\n","innerCode":"\n    // データベースからファイルデータを読み込んで、ローカルフォルダに書き出す\n    const files = await runSqlReadOnly(\n      `SELECT\n          excel_file_data AS excelFileData\n        FROM excel_templates\n        WHERE page_id = :pageId\n        LIMIT 1;`,\n        {\n            \":pageId\": pageId,\n        },\n    );\n    if(files.length>=1){\n        // Excelファイルが見つかった場合\n        return files[0][\"excelFileData\"];\n    }\n    // Excelファイルが見つからない場合\n    const staticPath = await getPath( \"STATIC_DATA\" );\n    const excelPath = path.join(staticPath,\"light/template.xlsm\");\n    const excelFileData = await fs.promises.readFile(excelPath);\n    //\n    await runSqlWriteOnly(\n        `INSERT INTO excel_templates (page_id, excel_file_data )\n            VALUES ( :pageId, :excelFileData );`,\n        {\n            \":pageId\": pageId,\n            \":excelFileData\": excelFileData,\n        },\n    );\n    return excelFileData;\n","afterCode":""},{"functionNameJP":"Excelテンプレートを保存","functionNameEN":"updateExcelTemplate","parametersName":["pageId","excelFileData"],"parametersDataType":["number","any"],"returnValue":"void","functionId":"01HPTX0SJYRN0WC3GECTHG5YYJ","beforeCode":"\n\n\n\n\n","innerCode":"\n    await runSqlWriteOnly(\n        `INSERT OR REPLACE INTO excel_templates (page_id, excel_file_data )\n            VALUES ( :pageId, :excelFileData );`,\n        {\n            \":pageId\": pageId,\n            \":excelFileData\": excelFileData,\n        },\n    );\n","afterCode":"\n"}]