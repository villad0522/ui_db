[{"functionId":"test","functionNameJP":"テストコード","functionNameEN":"test","beforeCode":"","innerCode":"\n","afterCode":"","parametersName":[],"parametersDataType":[],"returnValue":"void"},{"functionNameJP":"ビューのHTMLを生成（表）","functionNameEN":"generateViewHTML_table","parametersName":["viewId","tableId","onePageMaxSize","childPageId"],"parametersDataType":["number","string","number","number"],"returnValue":"string","functionId":"01HNCZAYD759G1FKRWMEYF1WBF","beforeCode":"\n\n\n\n","innerCode":"\n    const viewColumns = await listViewColumns( viewId );\n    let mainHtmlText = \"\";\n    mainHtmlText += `\n        <div class=\"card\" style=\"background: none; \">\n            <div class=\"card-body row\" oninput=\"myFetch('./auto_correct_view${viewId}/form?is_auto_fill=false')\">`;\n    //\n    for( const { viewColumnId, viewColumnType, columnPath, viewColumnName } of viewColumns ){\n        if( viewColumnType!==\"RAW\" ) {\n            mainHtmlText += `\n                <div class=\"col-xl-6 row mb-3\">\n                    <label for=\"${viewColumnId}\" class=\"col-md-3 form-label d-md-none\">\n                        ${viewColumnName}\n                    </label>\n                    <label for=\"${viewColumnId}\" class=\"col-md-3 form-label d-none d-md-block text-end\">\n                        ${viewColumnName}\n                    </label>\n                    <div class=\"col-md-9\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext\" name=\"${viewColumnId}\" id=\"${viewColumnId}\">\n                        <div class=\"invalid-feedback\" name=\"${viewColumnId}_message\" style=\"display: block;\"></div>\n                    </div>\n                </div>`;\n            continue;\n        }\n        const placeholder = \"\"; // 入力例（未実装）\n        const inputType = await getInputType( viewColumnId );\n        switch( inputType ){\n            case \"TEXTBOX_NUMBER\":\n                mainHtmlText += `\n                <div class=\"col-xl-6 row mb-3\">\n                    <label for=\"${viewColumnId}\" class=\"col-md-3 form-label d-md-none\">\n                        ${viewColumnName}\n                    </label>\n                    <label for=\"${viewColumnId}\" class=\"col-md-3 form-label d-none d-md-block text-end\">\n                        ${viewColumnName}\n                    </label>\n                    <div class=\"col-md-9\">\n                        <input name=\"${viewColumnId}\" type=\"number\" placeholder=\"${placeholder}\" class=\"form-control\" id=\"${viewColumnId}\">\n                        <div class=\"invalid-feedback\" name=\"${viewColumnId}_message\" style=\"display: block;\"></div>\n                    </div>\n                </div>`;\n                break;\n            case \"TEXTBOX\":\n                mainHtmlText += `\n                <div class=\"col-xl-6 row mb-3\">\n                    <label for=\"${viewColumnId}\" class=\"col-md-3 form-label d-md-none\">\n                        ${viewColumnName}\n                    </label>\n                    <label for=\"${viewColumnId}\" class=\"col-md-3 form-label d-none d-md-block text-end\">\n                        ${viewColumnName}\n                    </label>\n                    <div class=\"col-md-9\">\n                        <input name=\"${viewColumnId}\" type=\"text\" placeholder=\"${placeholder}\" class=\"form-control\" id=\"${viewColumnId}\">\n                        <datalist id=\"${viewColumnId}_options\">\n                        </datalist>\n                        <div class=\"invalid-feedback\" name=\"${viewColumnId}_message\" style=\"display: block;\"></div>\n                    </div>\n                </div>`;\n                break;\n            case \"CHECKBOX\":\n                mainHtmlText += `\n                <div class=\"col-xl-6 row mb-3\">\n                    <div class=\"col-md-3\">\n                    </div>\n                    <div class=\"col-md-9\">\n                        <div class=\"form-check\">\n                            <input name=\"${viewColumnId}\" class=\"form-check-input\" type=\"checkbox\" id=\"${viewColumnId}\">\n                            <label class=\"form-check-label\" for=\"${viewColumnId}\">\n                                ${viewColumnName}\n                            </label>\n                        </div>\n                    </div>\n                </div>`;\n                break;\n            default:\n                throw `サポートされていない入力方式です。\\ninputType = ${inputType}`;\n        }\n    }\n    //\n    mainHtmlText += `\n                <div class=\"col-12\" style=\"text-align: right;\">\n                    <button onclick=\"myFetch('./create_from_view${viewId}/form');\" class=\"btn btn-primary\" type=\"button\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-plus\" viewBox=\"0 0 16 16\">\n                            <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\n                        </svg>\n                        新規登録\n                    </button>\n                </div>\n            </div>\n        </div>`;\n    //\n    for( let i=0; i<onePageMaxSize; i++ ){\n        mainHtmlText += `\n        <!--  -->\n        <!-- 不可視のチェックボックスにチェックが入っているときだけ、直後のcard要素が表示される -->\n        <input name=\"view${viewId}_${i}_flag\" class=\"flag\" type=\"checkbox\" style=\"display: none;\">\n        <div class=\"card\">\n            <div class=\"id_box\">\n                ID:\n                <input name=\"view${viewId}_${i}_id\">\n            </div>\n            <div class=\"card-body row\">`;\n        for( const { viewColumnId, viewColumnType, columnPath, viewColumnName } of viewColumns ){\n            const elementName = `view${viewId}_${i}_${viewColumnId}`;\n            if( viewColumnType!==\"RAW\" ) {\n                mainHtmlText += `\n                <div class=\"col-xl-6 row mb-3\">\n                    <label for=\"${elementName}\" class=\"col-md-3 form-label d-md-none\">\n                        ${viewColumnName}\n                    </label>\n                    <label for=\"${elementName}\" class=\"col-md-3 form-label d-none d-md-block text-end\">\n                        ${viewColumnName}\n                    </label>\n                    <div class=\"col-md-9\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext\" name=\"${elementName}\" id=\"${elementName}\">\n                    </div>\n                </div>`;\n                continue;\n            }\n            const placeholder = \"\"; // 入力例（未実装）\n            const inputType = await getInputType( viewColumnId );\n            switch( inputType ){\n                case \"TEXTBOX_NUMBER\":\n                    mainHtmlText += `\n                <div class=\"col-xl-6 row mb-3\">\n                    <label for=\"${elementName}\" class=\"col-md-3 form-label d-md-none\">\n                        ${viewColumnName}\n                    </label>\n                    <label for=\"${elementName}\" class=\"col-md-3 form-label d-none d-md-block text-end\">\n                        ${viewColumnName}\n                    </label>\n                    <div class=\"col-md-9\">\n                        <input name=\"${elementName}\" type=\"number\" placeholder=\"${placeholder}\" class=\"form-control\" id=\"${elementName}\">\n                        <div class=\"invalid-feedback\" name=\"${elementName}_message\" style=\"display: block;\"></div>\n                    </div>\n                </div>`;\n                    break;\n                case \"TEXTBOX\":\n                    mainHtmlText += `\n                <div class=\"col-xl-6 row mb-3\">\n                    <label for=\"${elementName}\" class=\"col-md-3 form-label d-md-none\">\n                        ${viewColumnName}\n                    </label>\n                    <label for=\"${elementName}\" class=\"col-md-3 form-label d-none d-md-block text-end\">\n                        ${viewColumnName}\n                    </label>\n                    <div class=\"col-md-9\">\n                        <input name=\"${elementName}\" type=\"text\" placeholder=\"${placeholder}\" class=\"form-control\" id=\"${elementName}\">\n                        <datalist id=\"${elementName}_options\">\n                        </datalist>\n                        <div class=\"invalid-feedback\" name=\"${elementName}_message\" style=\"display: block;\"></div>\n                    </div>\n                </div>`;\n                    break;\n                case \"CHECKBOX\":\n                    mainHtmlText += `\n                <div class=\"col-xl-6 row mb-3\">\n                    <div class=\"col-md-3\">\n                    </div>\n                    <div class=\"col-md-9\">\n                        <div class=\"form-check\">\n                            <input name=\"${elementName}\" class=\"form-check-input\" type=\"checkbox\" id=\"${elementName}\">\n                            <label class=\"form-check-label\" for=\"${elementName}\">\n                                ${viewColumnName}\n                            </label>\n                        </div>\n                    </div>\n                </div>`;\n                    break;\n                default:\n                    throw `サポートされていない入力方式です。\\ninputType = ${inputType}`;\n            }\n        }\n        mainHtmlText += `\n                <div class=\"col-12\" style=\"text-align: right;\">\n                    <button onclick=\"handleDeleteButton(${viewId},${i})\" type=\"button\" class=\"btn btn-outline-danger btn-sm\">\n                        削除\n                    </button>\n                </div>\n            </div>\n        </div>`;\n    }\n    //\n    mainHtmlText += `\n        <br>\n        <br>\n        <br>\n        <div class=\"result_footer\">\n            <div style=\"display: flex; justify-content: space-between; padding-top: 5px;\">\n                <div style=\"font-size: 20px;\">\n                    <span name=\"view${viewId}__total\"></span>件\n                </div>\n                <ul class=\"pagination\">\n                    <!--  -->\n                    <!-- 不可視のチェックボックスにチェックが入っているときだけ、直後の要素が表示される -->\n                    <input name=\"view${viewId}__pageFirst_flag\" class=\"flag\" type=\"checkbox\" style=\"display: none;\">\n                    <li class=\"page-item\">\n                        <button onclick=\"paginationButtonFirst(${viewId})\" type=\"button\" class=\"page-link\">\n                            <span aria-hidden=\"true\">&laquo;</span>\n                        </button>\n                    </li>\n                    <!--  -->\n                    <!-- 不可視のチェックボックスにチェックが入っているときだけ、直後の要素が表示される -->\n                    <input name=\"view${viewId}__pagePrev_flag\" class=\"flag\" type=\"checkbox\" style=\"display: none;\">\n                    <li class=\"page-item\">\n                        <button name=\"view${viewId}__pagePrev\" onclick=\"paginationButtonPrev(${viewId})\" type=\"button\" class=\"page-link\">\n                        </button>\n                    </li>\n                    <!--  -->\n                    <!-- 不可視のチェックボックスにチェックが入っているときだけ、直後の要素が表示される -->\n                    <input name=\"view${viewId}__pageNow_flag\" class=\"flag\" type=\"checkbox\" style=\"display: none;\">\n                    <li class=\"page-item active\">\n                        <span class=\"page-link\" name=\"view${viewId}__pageNow\"> </span>\n                    </li>\n                    <!--  -->\n                    <!-- 不可視のチェックボックスにチェックが入っているときだけ、直後の要素が表示される -->\n                    <input name=\"view${viewId}__pageNext_flag\" class=\"flag\" type=\"checkbox\" style=\"display: none;\">\n                    <li class=\"page-item\">\n                        <button name=\"view${viewId}__pageNext\" onclick=\"paginationButtonNext(${viewId})\" type=\"button\" class=\"page-link\">\n                        </button>\n                    </li>\n                    <!--  -->\n                    <!-- 不可視のチェックボックスにチェックが入っているときだけ、直後の要素が表示される -->\n                    <input name=\"view${viewId}__pageLast_flag\" class=\"flag\" type=\"checkbox\" style=\"display: none;\">\n                    <li class=\"page-item\">\n                        <button onclick=\"paginationButtonLast(${viewId})\" type=\"button\" class=\"page-link\">\n                            <span aria-hidden=\"true\">&raquo;</span>\n                        </button>\n                    </li>\n                    <!--  -->\n                    <!-- 不可視のテキストボックス -->\n                    <input name=\"view${viewId}__pageLast\" type=\"text\" style=\"display: none;\">\n                </ul>\n                <div style=\"text-align: right; max-height: 45px;\">\n                    <button data-bs-toggle=\"collapse\" data-bs-target=\"#extract_collapse_${viewId}\" class=\"btn btn-outline-secondary\" type=\"button\">\n                        <i class=\"bi bi-funnel\"></i>\n                        抽出\n                        <span name=\"extraction${viewId}__total\" class=\"badge text-bg-secondary\"></span>\n                    </button>\n                    <button onclick=\"myFetch('./update_from_view${viewId}/form');\" type=\"button\" class=\"btn btn-outline-primary\">\n                        <i class=\"bi bi-pen\"></i>\n                        上書き\n                    </button>\n                </div>\n            </div>\n            <div class=\"collapse\" id=\"extract_collapse_${viewId}\">\n                <div class=\"extract_box\">\n                    <div class=\"row\">\n                        <div class=\"col-lg-10 mb-2\">\n                            <div class=\"input-group flex-nowrap\">\n                                <select name=\"newExtractionTarget${viewId}\" class=\"form-select\">\n                                </select>\n                                <span class=\"input-group-text\">が</span>\n                                <input name=\"newExtractionValue${viewId}\" type=\"text\" class=\"form-control\">\n                                <select name=\"newExtractionExpression${viewId}\" class=\"form-select\" style=\"max-width: 150px;\">\n                                    <option value=\"LIKE\" selected>を含む</option>\n                                    <option value=\"=\">と等しい</option>\n                                    <option value=\"!=\">以外</option>\n                                    <option value=\"<\">より小さい</option>\n                                    <option value=\">\">より大きい</option>\n                                    <option value=\"<=\">以下</option>\n                                    <option value=\">-\">以上</option>\n                                </select>\n                                <button onclick=\"myFetch('./add_extraction_view${viewId}/form');\" type=\"button\" class=\"btn btn-primary\">\n                                    <i class=\"bi bi-plus\"></i>\n                                    条件追加\n                                </button>\n                            </div>\n                        </div>`;\n    //\n    for( let i=0; i<10; i++ ){\n        mainHtmlText += `\n                        <div class=\"col-lg-6\" name=\"extraction${viewId}_${i}_flag\">\n                            <div class=\"input-group flex-nowrap\">\n                                <input name=\"extraction${viewId}_${i}_conditionId\" type=\"text\" style=\"display: none;\">\n                                <input name=\"extraction${viewId}_${i}_text\" disabled type=\"text\" class=\"form-control\" style=\"border: solid 1px #aaa;\">\n                                <button onclick=\"deleteExtraction(${viewId},${i})\" type=\"button\" class=\"btn btn-outline-danger\">\n                                    <i class=\"bi bi-trash\"></i>\n                                </button>\n                            </div>\n                        </div>`;\n    }\n    //\n    mainHtmlText += `\n                    </div>\n                </div>\n            </div>\n        </div>\n        <br>\n        <br>\n        <br>`;\n    mainHtmlText = mainHtmlText.replaceAll(\"\\n\",`\\n        `);\n    return mainHtmlText;\n","afterCode":""},{"functionNameJP":"ビューのHTMLを生成（カード）","functionNameEN":"generateViewHTML_card","parametersName":["viewId","tableId","onePageMaxSize","childPageId"],"parametersDataType":["number","string","number","number"],"returnValue":"string","functionId":"01HPQC5N1QDDR6SR214EA8DK59","beforeCode":"\n\n","innerCode":"\n    return \"\";\n","afterCode":""},{"functionNameJP":"ビューのHTMLを生成（ボタン）","functionNameEN":"generateViewHTML_button","parametersName":["viewId","tableId","onePageMaxSize","childPageId"],"parametersDataType":["number","string","number","number"],"returnValue":"string","functionId":"01HPQC6CS4GV02DFNA1ZVEYJTD","beforeCode":"\n\n","innerCode":"\n    return \"\";\n","afterCode":"\n"}]