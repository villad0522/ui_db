[{"functionId":"test","functionNameJP":"テストコード","functionNameEN":"test","beforeCode":"","innerCode":"\n    await startUp(\"http://localhost:3000/\", true);\n    //\n    const { tableId: tableId1 } = await createTable(\"学年\");\n    const { columnId: columnId1 } = await createColumn( tableId1, \"学年\", \"INTEGER\", null );\n    // 見出しの役割を果たすカラムを登録する\n    await setTitleColumn( columnId1 );\n    const { recordId: recordId } = await createRecord( tableId1, {\n        [columnId1]: 3,\n    });\n    //\n    const { tableId: tableId2 } = await createTable(\"名簿\");\n    const { columnId: columnId2  } = await createColumn( tableId2, \"学年\", \"POINTER\", tableId1 );\n    const { columnId: columnId3  } = await createColumn( tableId2, \"氏名\", \"TEXT\", null );\n    await createRecord( tableId2, {\n        [columnId2]: recordId,\n        [columnId3]: \"田中太郎\",\n    });\n    //\n    // ページを作成\n    const { pageId: pageId1 } = await createPage( null, \"ページ１\", false );\n    //\n    // ページに動的リストを追加\n    const { viewId: viewId1 } = await createView( pageId1, tableId2 );\n    await regenerateHTML( pageId1 );\n    await close();\n","afterCode":"","parametersName":[],"parametersDataType":[],"returnValue":"void"},{"functionNameJP":"ページを再生成する","functionNameEN":"regeneratePage","parametersName":["pageId"],"parametersDataType":["number"],"returnValue":"void","functionId":"01HMWEPGB83MFHHKJMWGTFZQ0B","beforeCode":"\n\n\nimport fs from 'fs';\nimport path from 'path';\n\n\n","innerCode":"\n    const customDirPath = await getPath(\"FRONTEND_CUSTOM\");\n    const folderPath = path.join( customDirPath, String(pageId) );\n    if (  !fs.existsSync( folderPath )  ) {\n        await fs.promises.mkdir( folderPath );\n    }\n    //#######################################################################################\n    let mainHtmlText = ``;\n    // ファイルを生成\n    const htmlPath = path.join( folderPath, `index.html` );\n    await fs.promises.writeFile( htmlPath, mainHtmlText );\n    //\n    //\n    //\n    //\n    //\n    //#######################################################################################\n    let settingHtmlText = `<!DOCTYPE html>\n<html lang=\"ja\">\n    <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n        <title>webページのタイトル</title>\n        <!--  -->\n        <!-- bootstrap5.3を読み込む -->\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM\" crossorigin=\"anonymous\">\n        <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz\" crossorigin=\"anonymous\"></script>\n        <!-- bootstrapのドキュメントはこちら -->\n        <!-- https://getbootstrap.jp/docs/5.3/getting-started/introduction/ -->\n        <!--  -->\n        <link rel=\"stylesheet\" href=\"./style.css\" type=\"text/css\">\n        <script src=\"./script.js\" type=\"module\"></script>\n    </head>\n    <body style=\"background: #eee;\">\n        <header style=\"position: sticky; top: 0; padding: 5px; width: max-content; box-sizing: border-box; background: #eee; z-index: 999;\">\n            <nav aria-label=\"breadcrumb\">\n                <ol class=\"breadcrumb\">${ await _getBreadcrumbHTML( pageId ) }\n                </ol>\n            </nav>\n            ${ (pageId===1) ? \"\" : `\n            <button onclick=\"backButton();\" type=\"button\" class=\"btn btn-outline-primary\">\n                戻る\n            </button>`\n            }\n        </header>\n        <main class=\"container\">\n            <form>\n                <!-- 基本データここから -->\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <label for=\"inputEmail4\" class=\"form-label\">Email</label>\n                        <input type=\"email\" class=\"form-control\" id=\"inputEmail4\" disabled>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <label for=\"inputPassword4\" class=\"form-label\">Password</label>\n                        <input type=\"password\" class=\"form-control\" id=\"inputPassword4\" disabled>\n                    </div>\n                    <div class=\"col-12\">\n                        <label for=\"inputAddress\" class=\"form-label\">Address</label>\n                        <input type=\"text\" class=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\" disabled>\n                    </div>\n                    <div class=\"col-12\">\n                        <label for=\"inputAddress2\" class=\"form-label\">Address 2</label>\n                        <input type=\"text\" class=\"form-control\" id=\"inputAddress2\" placeholder=\"Apartment, studio, or floor\" disabled>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <label for=\"inputCity\" class=\"form-label\">City</label>\n                        <input type=\"text\" class=\"form-control\" id=\"inputCity\" disabled>\n                    </div>\n                    <div class=\"col-md-4\">\n                        <label for=\"inputState\" class=\"form-label\">State</label>\n                        <select id=\"inputState\" class=\"form-select\" disabled>\n                            <option selected>Choose...</option>\n                            <option>...</option>\n                        </select>\n                    </div>\n                    <div class=\"col-md-2\">\n                        <label for=\"inputZip\" class=\"form-label\">Zip</label>\n                        <input type=\"text\" class=\"form-control\" id=\"inputZip\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <!-- リンク集 -->\n                    <a href=\"\"></a>\n                    <a href=\"\"></a>\n                    <a href=\"\"></a>\n                </div>\n                <hr>\n                <!-- 基本データここまで -->\n                <!--  -->\n                <!--  -->\n                <div class=\"collapse\" id=\"search_block\">\n                    <h4>抽出／並び替え</h4>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <label for=\"inputEmail4\" class=\"form-label\">Email</label>\n                            <input type=\"email\" class=\"form-control\" id=\"inputEmail4\">\n                        </div>\n                        <div class=\"col-md-6\">\n                            <label for=\"inputPassword4\" class=\"form-label\">Password</label>\n                            <input type=\"password\" class=\"form-control\" id=\"inputPassword4\">\n                        </div>\n                        <div class=\"col-12\">\n                            <label for=\"inputAddress\" class=\"form-label\">Address</label>\n                            <input type=\"text\" class=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\">\n                        </div>\n                        <div class=\"col-12\">\n                            <label for=\"inputAddress2\" class=\"form-label\">Address 2</label>\n                            <input type=\"text\" class=\"form-control\" id=\"inputAddress2\" placeholder=\"Apartment, studio, or floor\">\n                        </div>\n                        <div class=\"col-md-6\">\n                            <label for=\"inputCity\" class=\"form-label\">City</label>\n                            <input type=\"text\" class=\"form-control\" id=\"inputCity\">\n                        </div>\n                        <div class=\"col-md-4\">\n                            <label for=\"inputState\" class=\"form-label\">State</label>\n                            <select id=\"inputState\" class=\"form-select\">\n                                <option selected>Choose...</option>\n                                <option>...</option>\n                            </select>\n                        </div>\n                        <div class=\"col-md-2\">\n                            <label for=\"inputZip\" class=\"form-label\">Zip</label>\n                            <input type=\"text\" class=\"form-control\" id=\"inputZip\">\n                        </div>\n                    </div>\n                    <br>\n                    <div style=\"text-align: right;\">\n                        <button type=\"button\" class=\"btn btn-primary\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-search\" viewBox=\"0 0 16 16\">\n                                <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\n                            </svg>\n                            検索\n                        </button>\n                    </div>\n                    <hr>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-sm-6\">\n                        <h4 style=\"display: inline-block;\">検索結果</h4>\n                        （\n                        <input type=\"number\" id=\"inputEmail4\" disabled style=\"background: none; border: none; width: 50px;\">\n                        件）\n                    </div>\n                    <div class=\"col-sm-6\" style=\"text-align: right;\">\n                        <button data-bs-toggle=\"collapse\" data-bs-target=\"#search_block\" class=\"btn btn-outline-primary\" type=\"button\">\n                            抽出／並び替え\n                        </button>\n                        <button onclick=\"overwriteButton();\" type=\"button\" class=\"btn btn-outline-primary\">\n                            上書き\n                        </button>\n                        <button onclick=\"addButton();\" class=\"btn btn-primary\" type=\"button\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-plus\" viewBox=\"0 0 16 16\">\n                                <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\n                            </svg>\n                            追加\n                        </button>\n                    </div>\n                </div>\n                <div class=\"card\">\n                    <div class=\"card-body row\">\n                        <div class=\"col-md-6\">\n                            <label for=\"inputEmail4\" class=\"form-label\">Email</label>\n                            <input type=\"email\" class=\"form-control\" id=\"inputEmail4\" disabled>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <label for=\"inputPassword4\" class=\"form-label\">Password</label>\n                            <input type=\"password\" class=\"form-control\" id=\"inputPassword4\" disabled>\n                        </div>\n                        <div class=\"col-12\">\n                            <label for=\"inputAddress\" class=\"form-label\">Address</label>\n                            <input type=\"text\" class=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\" disabled>\n                        </div>\n                        <div class=\"col-12\">\n                            <label for=\"inputAddress2\" class=\"form-label\">Address 2</label>\n                            <input type=\"text\" class=\"form-control\" id=\"inputAddress2\" placeholder=\"Apartment, studio, or floor\" disabled>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <label for=\"inputCity\" class=\"form-label\">City</label>\n                            <input type=\"text\" class=\"form-control\" id=\"inputCity\" disabled>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <label for=\"inputState\" class=\"form-label\">State</label>\n                            <select id=\"inputState\" class=\"form-select\" disabled>\n                                <option selected>Choose...</option>\n                                <option>...</option>\n                            </select>\n                        </div>\n                        <div class=\"col-md-2\">\n                            <label for=\"inputZip\" class=\"form-label\">Zip</label>\n                            <input type=\"text\" class=\"form-control\" id=\"inputZip\" disabled>\n                        </div>\n                        <div class=\"col-12\">\n                            <div class=\"form-check\">\n                                <input class=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\" disabled>\n                                <label class=\"form-check-label\" for=\"gridCheck\">\n                                    Check me out\n                                </label>\n                            </div>\n                        </div>\n                        <div class=\"col-12\" style=\"text-align: right;\">\n                            <button type=\"button\" class=\"btn btn-outline-danger btn-sm\">\n                                削除\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card\">\n                    <div class=\"card-body row\">\n                        <div class=\"col-12\" style=\"text-align: right;\">\n                            <button type=\"button\" class=\"btn btn-outline-danger btn-sm\">\n                                削除\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card\">\n                    <div class=\"card-body row\">\n                        <div class=\"col-12\" style=\"text-align: right;\">\n                            <button type=\"button\" class=\"btn btn-outline-danger btn-sm\">\n                                削除\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card\">\n                    <div class=\"card-body row\">\n                        <div class=\"col-12\" style=\"text-align: right;\">\n                            <button type=\"button\" class=\"btn btn-outline-danger btn-sm\">\n                                削除\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card\">\n                    <div class=\"card-body row\">\n                        <div class=\"col-12\" style=\"text-align: right;\">\n                            <button type=\"button\" class=\"btn btn-outline-danger btn-sm\">\n                                削除\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card\">\n                    <div class=\"card-body row\">\n                        <div class=\"col-12\" style=\"text-align: right;\">\n                            <button type=\"button\" class=\"btn btn-outline-danger btn-sm\">\n                                削除\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card\">\n                    <div class=\"card-body row\">\n                        <div class=\"col-12\" style=\"text-align: right;\">\n                            <button type=\"button\" class=\"btn btn-outline-danger btn-sm\">\n                                削除\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card\">\n                    <div class=\"card-body row\">\n                        <div class=\"col-12\" style=\"text-align: right;\">\n                            <button type=\"button\" class=\"btn btn-outline-danger btn-sm\">\n                                削除\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card\">\n                    <div class=\"card-body row\">\n                        <div class=\"col-12\" style=\"text-align: right;\">\n                            <button type=\"button\" class=\"btn btn-outline-danger btn-sm\">\n                                削除\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card\">\n                    <div class=\"card-body row\">\n                        <div class=\"col-12\" style=\"text-align: right;\">\n                            <button type=\"button\" class=\"btn btn-outline-danger btn-sm\">\n                                削除\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <br>\n                <br>\n                <br>\n                <br>\n            </form>\n        </main>\n        <footer>\n            <div class=\"container\">\n                <a href=\"/default\" class=\"btn btn-dark\" target=\"_blank\">\n                    管理画面\n                </a>\n                <button onclick=\"myFetch('/default/regenerate_page/json?page_id=${pageId}');\" type=\"button\" class=\"btn btn-outline-dark\">\n                    ページを再生成\n                </button>\n                <div class=\"form-check form-switch\">\n                    <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"edit_mode_switch\">\n                    <label class=\"form-check-label\" for=\"edit_mode_switch\">\n                        ページを編集\n                    </label>\n                </div>\n                <br>\n                <br>\n            </div>\n        </footer>\n    </body>\n</html>`;\n    // ファイルを生成\n    const settingPath = path.join( folderPath, `setting.html` );\n    await fs.promises.writeFile( settingPath, settingHtmlText );\n    //\n    //\n    //\n    //\n    //\n    //#######################################################################################\n    let cssText = `\nhr {\n    margin: 50px 0;\n}\n\n.card {\n    background: #fafafa;\n    margin: 20px 0;\n}\n\n.form-control,\n.form-select {\n    margin-bottom: 10px;\n}\n\n.form-control:disabled,\n.form-select:disabled {\n    border: none;\n    background: none;\n    margin-bottom: 30px;\n    padding: 0 0 0 15px;\n}\n`;\n    const cssPath = path.join( folderPath, `style.css` );\n    await fs.promises.writeFile( cssPath, cssText );\n    //\n    //\n    //\n    //\n    //\n    //#######################################################################################\n    let jsText = `\nimport myFetch from \"/default/my_fetch.js\";\n\n// 一か所でも編集されたかどうかを記録する変数\nlet isEdit = false;\n//\n//###############################################################\n// ページを読み込んだら、はじめに実行する\nwindow.addEventListener('DOMContentLoaded', async () => {\n    await myFetch(\"./form\" + location.search, { method: \"GET\" });\n    //\n    // 変更された項目を水色にする\n    const formElements = document.querySelectorAll(\"input,select,textarea\");\n    for (const formElement of formElements) {\n        formElement.addEventListener(\"change\", () => {\n            formElement.style.background = \"#ddffff\";\n            isEdit = true;\n        });\n    }\n});\n//###############################################################\n// 「戻る」ボタンがクリックされたときに実行する関数\nwindow.backButton = function () {\n    if (isEdit) {\n        if (confirm(\"編集内容は破棄されます。よろしいですか？\") == false) {\n            return;\n        }\n    }\n    // 現在のページのクエリパラメータ―を維持したまま、別のページに移動する\n    window.location.href = \"../index.html\" + window.location.search;\n}\n//\n//###############################################################\n// 「キャンセル」ボタンがクリックされたときに実行する関数\nwindow.cancelButton = function () {\n    // 現在のページのクエリパラメータ―を維持したまま、別のページに移動する\n    window.location.href = \"../index.html\" + window.location.search;\n}\n//\n//###############################################################\n// 「表の名前を変更」ボタンがクリックされたときに実行する関数\nwindow.renameButton = function () {\n    // 現在のページのクエリパラメータ―を維持したまま、別のページに移動する\n    window.location.href = \"./rename\" + window.location.search;\n}\n//\n//###############################################################\n// テーブルがクリックされたときに実行する関数\nwindow.tableButton = function (i) {\n    // テーブル名\n    let tableId = document.getElementsByName(\\`tables\\${i}_id\\`)[0].value;\n    //\n    // 別のページに移動する\n    tableId = encodeURIComponent(tableId);\n    window.location.href = \\`../records?table=\\${tableId}\\`;\n}\n//\n//###############################################################\n// ページネーションボタンの「First」がクリックされたときに実行する関数\nwindow.paginationButtonFirst = function (arrayName) {\n    // クエリパラメータ―を作成\n    const searchParams = new URLSearchParams(location.search);\n    searchParams.set(\"page_tables\", 1);\n    // ページを再読み込み\n    window.location.href = \"./?\" + searchParams.toString();\n}\n//\n//###############################################################\n// ページネーションボタンの「Prev」がクリックされたときに実行する関数\nwindow.paginationButtonPrev = function () {\n    // 次に進むべきページ番号\n    const pageNumber = document.getElementsByName(\"tables_pagePrev\")[0].value;\n    // クエリパラメータ―を作成\n    const searchParams = new URLSearchParams(location.search);\n    searchParams.set(\"page_tables\", pageNumber);\n    // ページを再読み込み\n    window.location.href = \"./?\" + searchParams.toString();\n}\n//\n//###############################################################\n// ページネーションボタンの「Next」がクリックされたときに実行する関数\nwindow.paginationButtonNext = function () {\n    // 次に進むべきページ番号\n    const pageNumber = document.getElementsByName(\"tables_pageNext\")[0].value;\n    // クエリパラメータ―を作成\n    const searchParams = new URLSearchParams(location.search);\n    searchParams.set(\"page_tables\", pageNumber);\n    // ページを再読み込み\n    window.location.href = \"./?\" + searchParams.toString();\n}\n//\n//###############################################################\n// ページネーションボタンの「Last」がクリックされたときに実行する関数\nwindow.paginationButtonLast = function () {\n    // 次に進むべきページ番号\n    const pageNumber = document.getElementsByName(\"tables_pageLast\")[0].value;\n    // クエリパラメータ―を作成\n    const searchParams = new URLSearchParams(location.search);\n    searchParams.set(\"page_tables\", pageNumber);\n    // ページを再読み込み\n    window.location.href = \"./?\" + searchParams.toString();\n}\n//\n//###############################################################\n`;\n    const jsPath = path.join( folderPath, `script.js` );\n    await fs.promises.writeFile( jsPath, jsText );\n    //\n    //\n    //\n    //\n    //\n    //#######################################################################################\n","afterCode":""},{"functionNameJP":"ページを作成","functionNameEN":"createPage","parametersName":["parentPageId"],"parametersDataType":["number"],"returnValue":{"pageId":"number"},"functionId":"01HMXCR4NRYWTDFZ5VB4VBYS8T","beforeCode":"\n\n\n// パンくずリストを生成する関数\nasync function _getBreadcrumbHTML( pageId ){\n    let htmlText = \"\";\n    const breadcrumbs = await getBreadcrumbs( pageId );\n    for( const { pageId, pageName } of breadcrumbs ){\n      htmlText += `\n                    <li class=\"breadcrumb-item\"><a href=\"./${pageId}.html\">${pageName}</a></li>`;\n    }\n    return htmlText;\n}\n\n","innerCode":"\n    const result = await createPage( parentPageId );\n    await regeneratePage_core( result.pageId );\n    return result;\n","afterCode":""},{"functionNameJP":"ビューを作成","functionNameEN":"createView","parametersName":["pageId","tableId","sqlQuery"],"parametersDataType":["number","string","string"],"returnValue":"void","functionId":"01HMXCRYM57G6T43PG2TGVSJSG","beforeCode":"\n\n\n\n","innerCode":"\n    const result = await createPage( parentPageId, pageName );\n    await regeneratePage_core( result.pageId );\n    return result;\n","afterCode":""},{"functionNameJP":"プログラム起動","functionNameEN":"startUp","parametersName":["localUrl","isDebug"],"parametersDataType":["string_nullable","boolean"],"returnValue":"void","functionId":"01HMXDYQFB5MX8R0C8EW2Q5GDQ","beforeCode":"\n\n\n","innerCode":"\n    await startUp( localUrl, isDebug );   // 下層の関数を呼び出す\n    //\n    const customDirPath = await getPath(\"FRONTEND_CUSTOM\");\n    const customFilePath = path.join(customDirPath, \"1.html\");\n    if ( !fs.existsSync(customFilePath)) {\n        // ./src/frontend/custom/1.html が存在しない場合\n        await regeneratePage_core( 1 );\n    }\n","afterCode":"\n"}]