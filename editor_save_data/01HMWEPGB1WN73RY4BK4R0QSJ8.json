[{"functionId":"test","functionNameJP":"テストコード","functionNameEN":"test","beforeCode":"","innerCode":"\n    await startUp(\"http://localhost:3000/\", true);\n    //\n    const { tableId: tableId1 } = await createTable(\"学年\");\n    const { columnId: columnId1 } = await createColumn( tableId1, \"学年\", \"INTEGER\", null );\n    // 見出しの役割を果たすカラムを登録する\n    await setTitleColumn( columnId1 );\n    const { recordId: recordId } = await createRecord( tableId1, {\n        [columnId1]: 3,\n    });\n    //\n    const { tableId: tableId2 } = await createTable(\"名簿\");\n    const { columnId: columnId2  } = await createColumn( tableId2, \"学年\", \"POINTER\", tableId1 );\n    const { columnId: columnId3  } = await createColumn( tableId2, \"氏名\", \"TEXT\", null );\n    await createRecord( tableId2, {\n        [columnId2]: recordId,\n        [columnId3]: \"田中太郎\",\n    });\n    //\n    // ページを作成\n    const { pageId: pageId1 } = await createPage( null, \"ページ１\", false );\n    //\n    // ページに動的リストを追加\n    const { viewId: viewId1 } = await createView( pageId1, tableId2 );\n    await regenerateHTML( pageId1 );\n    await close();\n","afterCode":"","parametersName":[],"parametersDataType":[],"returnValue":"void"},{"functionNameJP":"ページを再生成する","functionNameEN":"regeneratePage","parametersName":["pageId"],"parametersDataType":["number"],"returnValue":"void","functionId":"01HMWEPGB83MFHHKJMWGTFZQ0B","beforeCode":"\n\n\nimport fs from 'fs';\nimport path from 'path';\n\n\n","innerCode":"\n    const staticDirPath = await getPath(\"STATIC_DATA\");\n    const templateDirPath = path.join( staticDirPath, \"./light/page_template\" );\n    //\n    const customDirPath = await getPath(\"FRONTEND_CUSTOM\");\n    const pagePath = path.join( customDirPath, String(pageId) );\n    if (  !fs.existsSync( pagePath )  ) {\n        await fs.promises.mkdir( pagePath );\n    }\n    //\n    // CSSを生成する（テンプレートからコピーする）\n    const cssSrcPath = path.join( templateDirPath, `style.css` );\n    const cssDestPath = path.join( pagePath, `style.css` );\n    await fs.promises.copyFile( cssSrcPath, cssDestPath );\n    //\n    // JavaScriptを生成する（テンプレートからコピーする）\n    const jsSrcPath = path.join( templateDirPath, `script.js` );\n    const jsDestPath = path.join( pagePath, `script.js` );\n    let jsText = await fs.promises.readFile( jsSrcPath, { encoding: \"utf8\" } );\n    jsText = jsText.replaceAll( \"PAGE_ID\", pageId );\n    await fs.promises.writeFile( jsDestPath, jsText );\n    //\n    // ページの情報を取得する\n    const { pageName, memo } = await getPageInfo( pageId );\n    //\n    // パンくずリストを取得する\n    const breadcrumbs = await getBreadcrumbs( pageId );\n    let parentPageId = null;\n    if( breadcrumbs.length >= 2 ){\n        parentPageId = breadcrumbs[breadcrumbs.length-2].pageId;\n    }\n    //\n    // 子ページの一覧\n    const staticChildren = await listStaticChildren( pageId );\n    //\n    // ビューの一覧\n    const views = await listChildrenView( pageId );\n    //\n    //\n    let mainHtmlText = `<!DOCTYPE html>\n<html lang=\"ja\">\n\n    <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n        <title>${pageName}</title>\n        <!--  -->\n        <!-- bootstrap5.3を読み込む -->\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM\" crossorigin=\"anonymous\">\n        <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz\" crossorigin=\"anonymous\"></script>\n        <!-- bootstrapのドキュメントはこちら -->\n        <!-- https://getbootstrap.jp/docs/5.3/getting-started/introduction/ -->\n        <!--  -->\n        <!--  -->\n        <!-- bootstrapのアイコンを読み込む -->\n        <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css\">\n        <!--  -->\n        <!-- 自作CSSを読み込む -->\n        <link rel=\"stylesheet\" href=\"./style.css\" type=\"text/css\">\n        <!--  -->\n        <!-- 自作JavaScriptを読み込む -->\n        <script src=\"./script.js\" type=\"module\"></script>\n    </head>\n\n    <body>\n        <nav class=\"navbar navbar-dark bg-primary\">\n            <div class=\"container-fluid\">\n                <button ${ parentPageId ? \"\" : \"disabled\" } onclick=\"jumpWithQuery('/custom/${parentPageId}/index.html')\" type=\"button\" class=\"btn btn-light me-2\">\n                    戻る\n                </button>\n                <div class=\"d-flex\" role=\"search\" style=\"width: 300px;\">\n                    <div class=\"input-group\">\n                        <span class=\"input-group-text\" style=\"background: none; color: #fff;\">\n                            <i class=\"bi bi-search\"></i>\n                        </span>\n                        <input class=\"form-control search_box\" type=\"search\" placeholder=\"検索\" aria-label=\"Search\">\n                    </div>\n                </div>\n                <div class=\"form-check form-switch\">\n                    <input onchange=\"handleEditSwitch(event)\" class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"edit_mode_switch\">\n                    <label class=\"form-check-label\" for=\"edit_mode_switch\" style=\"color:#fff\">\n                        表示設定\n                    </label>\n                </div>\n                <a href=\"/default/tables/index.html\" class=\"btn btn-dark me-2\" target=\"_blank\">\n                    本体データ\n                    &nbsp;\n                    <i class=\"bi bi-box-arrow-up-right\"></i>\n                </a>\n            </div>\n        </nav>\n        <nav aria-label=\"breadcrumb\">\n            <!-- パンくずリストをクリックすると、クエリパラメータ―を維持したまま別のページへジャンプする -->\n            <ol class=\"breadcrumb\">${ _getBreadcrumbHTML({ breadcrumbs, pageId }) }\n            </ol>\n        </nav>\n        <main class=\"container\">\n            <!--  -->\n            <!--  -->\n            <!-- 見出し -->\n            <h1>${ await  escapeHTML_core( pageName ) }</h1>\n            <!--  -->\n            <!--  -->\n            <!-- メモ -->\n            <pre>${ await  escapeHTML_core( memo ) }</pre>\n            <!--  -->\n            <!--  -->\n            <!-- 子ページへのリンクここから -->\n            <div style=\"display: flex; flex-wrap: wrap; justify-content: space-around;\">\n                <!-- 正方形のアイコンをクリックすると、クエリパラメータ―を維持したまま別のページへジャンプする -->`;\n    //\n    for( const { pageId, pageName } of staticChildren ){\n        mainHtmlText += `\n                <div class=\"tile\" onclick=\"jumpWithQuery('/custom/${pageId}/index.html')\">\n                    ${pageName}\n                </div>`;\n    }\n    //\n    mainHtmlText += `\n                <div class=\"tile_empty\"></div>\n                <div class=\"tile_empty\"></div>\n                <div class=\"tile_empty\"></div>\n                <div class=\"tile_empty\"></div>\n                <div class=\"tile_empty\"></div>\n                <div class=\"tile_empty\"></div>\n                <div class=\"tile_empty\"></div>\n                <div class=\"tile_empty\"></div>\n            </div>\n            <br>\n            <form>\n                <!-- 基本データここから -->\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <label for=\"inputEmail4\" class=\"form-label\">Email</label>\n                        <input type=\"email\" class=\"form-control\" id=\"inputEmail4\" disabled>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <label for=\"inputPassword4\" class=\"form-label\">Password</label>\n                        <input type=\"password\" class=\"form-control\" id=\"inputPassword4\" disabled>\n                    </div>\n                    <div class=\"col-12\">\n                        <label for=\"inputAddress\" class=\"form-label\">Address</label>\n                        <input type=\"text\" class=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\" disabled>\n                    </div>\n                    <div class=\"col-12\">\n                        <label for=\"inputAddress2\" class=\"form-label\">Address 2</label>\n                        <input type=\"text\" class=\"form-control\" id=\"inputAddress2\" placeholder=\"Apartment, studio, or floor\" disabled>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <label for=\"inputCity\" class=\"form-label\">City</label>\n                        <input type=\"text\" class=\"form-control\" id=\"inputCity\" disabled>\n                    </div>\n                    <div class=\"col-md-4\">\n                        <label for=\"inputState\" class=\"form-label\">State</label>\n                        <select id=\"inputState\" class=\"form-select\" disabled>\n                            <option selected>Choose...</option>\n                            <option>...</option>\n                        </select>\n                    </div>\n                    <div class=\"col-md-2\">\n                        <label for=\"inputZip\" class=\"form-label\">Zip</label>\n                        <input type=\"text\" class=\"form-control\" id=\"inputZip\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <!-- リンク集 -->\n                    <a href=\"\"></a>\n                    <a href=\"\"></a>\n                    <a href=\"\"></a>\n                </div>\n                <hr>\n                <!-- 基本データここまで -->\n                <!--  -->\n                <!--  -->\n                <div class=\"collapse\" id=\"search_block\">\n                    <h4>抽出／並び替え</h4>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <label for=\"inputEmail4\" class=\"form-label\">Email</label>\n                            <input type=\"email\" class=\"form-control\" id=\"inputEmail4\">\n                        </div>\n                        <div class=\"col-md-6\">\n                            <label for=\"inputPassword4\" class=\"form-label\">Password</label>\n                            <input type=\"password\" class=\"form-control\" id=\"inputPassword4\">\n                        </div>\n                        <div class=\"col-12\">\n                            <label for=\"inputAddress\" class=\"form-label\">Address</label>\n                            <input type=\"text\" class=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\">\n                        </div>\n                        <div class=\"col-12\">\n                            <label for=\"inputAddress2\" class=\"form-label\">Address 2</label>\n                            <input type=\"text\" class=\"form-control\" id=\"inputAddress2\" placeholder=\"Apartment, studio, or floor\">\n                        </div>\n                        <div class=\"col-md-6\">\n                            <label for=\"inputCity\" class=\"form-label\">City</label>\n                            <input type=\"text\" class=\"form-control\" id=\"inputCity\">\n                        </div>\n                        <div class=\"col-md-4\">\n                            <label for=\"inputState\" class=\"form-label\">State</label>\n                            <select id=\"inputState\" class=\"form-select\">\n                                <option selected>Choose...</option>\n                                <option>...</option>\n                            </select>\n                        </div>\n                        <div class=\"col-md-2\">\n                            <label for=\"inputZip\" class=\"form-label\">Zip</label>\n                            <input type=\"text\" class=\"form-control\" id=\"inputZip\">\n                        </div>\n                    </div>\n                    <br>\n                    <div style=\"text-align: right;\">\n                        <button type=\"button\" class=\"btn btn-primary\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-search\" viewBox=\"0 0 16 16\">\n                                <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\n                            </svg>\n                            検索\n                        </button>\n                    </div>\n                    <hr>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-sm-6\">\n                        <h4 style=\"display: inline-block;\">検索結果</h4>\n                        （\n                        <input type=\"number\" id=\"inputEmail4\" disabled style=\"background: none; border: none; width: 50px;\">\n                        件）\n                    </div>\n                    <div class=\"col-sm-6\" style=\"text-align: right;\">\n                        <button data-bs-toggle=\"collapse\" data-bs-target=\"#search_block\" class=\"btn btn-outline-primary\" type=\"button\">\n                            抽出／並び替え\n                        </button>\n                        <button onclick=\"overwriteButton();\" type=\"button\" class=\"btn btn-outline-primary\">\n                            上書き\n                        </button>\n                        <button onclick=\"addButton();\" class=\"btn btn-primary\" type=\"button\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-plus\" viewBox=\"0 0 16 16\">\n                                <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\n                            </svg>\n                            追加\n                        </button>\n                    </div>\n                </div>\n                <div class=\"card\">\n                    <div class=\"card-body row\">\n                        <div class=\"col-md-6\">\n                            <label for=\"inputEmail4\" class=\"form-label\">Email</label>\n                            <input type=\"email\" class=\"form-control\" id=\"inputEmail4\" disabled>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <label for=\"inputPassword4\" class=\"form-label\">Password</label>\n                            <input type=\"password\" class=\"form-control\" id=\"inputPassword4\" disabled>\n                        </div>\n                        <div class=\"col-12\">\n                            <label for=\"inputAddress\" class=\"form-label\">Address</label>\n                            <input type=\"text\" class=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\" disabled>\n                        </div>\n                        <div class=\"col-12\">\n                            <label for=\"inputAddress2\" class=\"form-label\">Address 2</label>\n                            <input type=\"text\" class=\"form-control\" id=\"inputAddress2\" placeholder=\"Apartment, studio, or floor\" disabled>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <label for=\"inputCity\" class=\"form-label\">City</label>\n                            <input type=\"text\" class=\"form-control\" id=\"inputCity\" disabled>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <label for=\"inputState\" class=\"form-label\">State</label>\n                            <select id=\"inputState\" class=\"form-select\" disabled>\n                                <option selected>Choose...</option>\n                                <option>...</option>\n                            </select>\n                        </div>\n                        <div class=\"col-md-2\">\n                            <label for=\"inputZip\" class=\"form-label\">Zip</label>\n                            <input type=\"text\" class=\"form-control\" id=\"inputZip\" disabled>\n                        </div>\n                        <div class=\"col-12\">\n                            <div class=\"form-check\">\n                                <input class=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\" disabled>\n                                <label class=\"form-check-label\" for=\"gridCheck\">\n                                    Check me out\n                                </label>\n                            </div>\n                        </div>\n                        <div class=\"col-12\" style=\"text-align: right;\">\n                            <button type=\"button\" class=\"btn btn-outline-danger btn-sm\">\n                                削除\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card\">\n                    <div class=\"card-body row\">\n                        <div class=\"col-12\" style=\"text-align: right;\">\n                            <button type=\"button\" class=\"btn btn-outline-danger btn-sm\">\n                                削除\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card\">\n                    <div class=\"card-body row\">\n                        <div class=\"col-12\" style=\"text-align: right;\">\n                            <button type=\"button\" class=\"btn btn-outline-danger btn-sm\">\n                                削除\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card\">\n                    <div class=\"card-body row\">\n                        <div class=\"col-12\" style=\"text-align: right;\">\n                            <button type=\"button\" class=\"btn btn-outline-danger btn-sm\">\n                                削除\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card\">\n                    <div class=\"card-body row\">\n                        <div class=\"col-12\" style=\"text-align: right;\">\n                            <button type=\"button\" class=\"btn btn-outline-danger btn-sm\">\n                                削除\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card\">\n                    <div class=\"card-body row\">\n                        <div class=\"col-12\" style=\"text-align: right;\">\n                            <button type=\"button\" class=\"btn btn-outline-danger btn-sm\">\n                                削除\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card\">\n                    <div class=\"card-body row\">\n                        <div class=\"col-12\" style=\"text-align: right;\">\n                            <button type=\"button\" class=\"btn btn-outline-danger btn-sm\">\n                                削除\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card\">\n                    <div class=\"card-body row\">\n                        <div class=\"col-12\" style=\"text-align: right;\">\n                            <button type=\"button\" class=\"btn btn-outline-danger btn-sm\">\n                                削除\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card\">\n                    <div class=\"card-body row\">\n                        <div class=\"col-12\" style=\"text-align: right;\">\n                            <button type=\"button\" class=\"btn btn-outline-danger btn-sm\">\n                                削除\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card\">\n                    <div class=\"card-body row\">\n                        <div class=\"col-12\" style=\"text-align: right;\">\n                            <button type=\"button\" class=\"btn btn-outline-danger btn-sm\">\n                                削除\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <br>\n                <br>\n                <br>\n                <br>\n            </form>\n        </main>\n        <footer>\n            <div class=\"container\">\n                <br>\n                <br>\n            </div>\n        </footer>\n    </body>\n\n</html>`;\n    //\n    //\n    // HTMLファイルを生成\n    const htmlPath = path.join( pagePath, `index.html` );\n    await fs.promises.writeFile( htmlPath, mainHtmlText );\n","afterCode":""},{"functionNameJP":"ページを作成","functionNameEN":"createPage","parametersName":["parentPageId"],"parametersDataType":["number"],"returnValue":{"pageId":"number"},"functionId":"01HMXCR4NRYWTDFZ5VB4VBYS8T","beforeCode":"\n\n\n// パンくずリストを生成する関数\nfunction _getBreadcrumbHTML({ breadcrumbs, pageId }){\n    let htmlText = \"\";\n    for( let i=0; i<breadcrumbs.length; i++ ){\n        const isLast = ( i === breadcrumbs.length-1 );\n        const { pageId, pageName } = breadcrumbs[i];\n        htmlText += `\n                <li class=\"breadcrumb-item${ isLast ? ' active' : '' }\" onclick=\"jumpWithQuery('/custom/${pageId}/index.html')\" >\n                    ${pageName}\n                </li>`;\n    }\n    return htmlText;\n}\n\n\n\n","innerCode":"\n    const result = await createPage( parentPageId );\n    //\n    // 作ったばかりの子ページのHTMLを生成する\n    await regeneratePage_core( result.pageId );\n    //\n    // 親ページのHTMLを再生成する\n    await regeneratePage_core( parentPageId );\n    //\n    return result;\n","afterCode":""},{"functionNameJP":"ビューを作成","functionNameEN":"createView","parametersName":["pageId","tableId","sqlQuery"],"parametersDataType":["number","string","string"],"returnValue":"void","functionId":"01HMXCRYM57G6T43PG2TGVSJSG","beforeCode":"\n\n\n\n","innerCode":"\n    const result = await createPage( parentPageId, pageName );\n    await regeneratePage_core( result.pageId );\n    return result;\n","afterCode":""},{"functionNameJP":"プログラム起動","functionNameEN":"startUp","parametersName":["localUrl","isDebug"],"parametersDataType":["string_nullable","boolean"],"returnValue":"void","functionId":"01HMXDYQFB5MX8R0C8EW2Q5GDQ","beforeCode":"\n\n\n","innerCode":"\n    await startUp( localUrl, isDebug );   // 下層の関数を呼び出す\n    //\n    const customDirPath = await getPath(\"FRONTEND_CUSTOM\");\n    const customFilePath = path.join(customDirPath, \"1.html\");\n    if ( !fs.existsSync(customFilePath)) {\n        // ./src/frontend/custom/1.html が存在しない場合\n        await regeneratePage_core( 1 );\n    }\n","afterCode":""},{"functionNameJP":"HTMLエスケープ","functionNameEN":"escapeHTML","parametersName":["text"],"parametersDataType":["string"],"returnValue":"string","functionId":"01HN08ZW31CZFWRNBGW33DFM44","beforeCode":"\n\n\n\n\n\n","innerCode":"\n  return text.replace(/[&'`\"<>]/g, function(match) {\n    return {\n      '&': '&amp;',\n      \"'\": '&#x27;',\n      '`': '&#x60;',\n      '\"': '&quot;',\n      '<': '&lt;',\n      '>': '&gt;',\n    }[match]\n  });\n","afterCode":""},{"functionNameJP":"ページ名やメモを変更","functionNameEN":"updatePageName","parametersName":["pageId","pageName","memo"],"parametersDataType":["number","string","string"],"returnValue":"string","functionId":"01HN0HV16MZ539YE9NM68YXK7C","beforeCode":"\n\n\n","innerCode":"\n    // 下層の関数を呼び出す\n    const result = await updatePageName( pageId, pageName, memo );\n    //\n    // 名前を変更したページのHTMLを生成する\n    await regeneratePage_core( pageId );\n    //\n    // 親ページのHTMLを再生成する\n    const parentPageId = await getParentPage( pageId );\n    if( parentPageId >= 1 ){\n        await regeneratePage_core( parentPageId );\n    }\n    //\n    // 子ページのHTMLを再生成する（パンくずリストに表示されるため）\n    const children = await listChildrenPage( pageId );\n    for( const pageId of children ){\n        await regeneratePage_core( pageId );\n    }\n    //\n    return result;\n","afterCode":""},{"functionNameJP":"ビューを削除","functionNameEN":"deleteView","parametersName":["viewId"],"parametersDataType":["number"],"returnValue":"void","functionId":"01HN246F69N9VPG3Y4M0KA5NM9","beforeCode":"\n\n\n\n","innerCode":"\n    // 下層の関数を呼び出す\n    const result = await deleteView( viewId );\n    //\n    // 子ページを取得する（１個のはず）\n    const pages = await runSqlReadOnly(\n        `SELECT page_id AS pageId\n        FROM pages\n        WHERE dynamic_parent_id = :viewId;`,\n        {\n        \":viewId\": viewId,\n        },\n    );\n    for( const { pageId } of pages ){\n        // 子ページを再帰的に削除する\n        await deletePage_core( pageId );\n    }\n    return result;\n","afterCode":""},{"functionNameJP":"ページを再帰的に削除","functionNameEN":"deletePage","parametersName":["pageId"],"parametersDataType":["number"],"returnValue":"void","functionId":"01HN2477ERZHXHTKBCSDCWQSVJ","beforeCode":"\n\n\n","innerCode":"\n    // 下層の関数を呼び出す\n    const result = await deletePage( pageId );\n    // 子ページの一覧を取得する\n    const children = await listChildrenPage( pageId );\n    // 子ページを削除する\n    //  （子→親の順番になるように削除する）\n    for( let i=children.length-1; i>=0; i-- ){\n        await _deletePageFolder( children[i] );\n    }\n    // 対象のページを削除する\n    await _deletePageFolder( pageId );\n    //\n    return result;\n","afterCode":""},{"functionNameJP":"ページを貼り付ける","functionNameEN":"pastePage","parametersName":["newParentId","afterPageId"],"parametersDataType":["number","number_nullable"],"returnValue":"void","functionId":"01HN248SKSYV7JBKPVH5J7127R","beforeCode":"\n\n\n\n\nasync function _deletePageFolder( pageId ){\n    const customDirPath = await getPath(\"FRONTEND_CUSTOM\");\n    const pagePath = path.join( customDirPath, String(pageId) );\n    if (  fs.existsSync( pagePath )  ) {\n        await fs.promises.rm( pagePath,  { recursive: true } );\n    }\n}\n\n\n\n","innerCode":"\n    //\n    // 親ページ（切り取り元）を調べる\n    const cuttingPageId = await getCuttingPage();\n    let pastParentId = null;\n    if(cuttingPageId){\n        pastParentId = await getParentPage( cuttingPageId );\n    }\n    //\n    // 下層の関数を呼び出す\n    const result = await pastePage( newParentId, afterPageId );\n    if(! result.pageId ){\n        throw `result.pageIdがNULLです。`;\n    }\n    //\n    if( pastParentId !== newParentId ){\n        // 親ページ（切り取り元）のHTMLを再生成する\n        if( pastParentId >= 1 ){\n            await regeneratePage_core( pastParentId );\n        }\n    }\n    //\n    // 移動したページのHTMLを再生成する（パンくずリストを更新するため）\n    await regeneratePage_core( result.pageId );\n    //\n    // 親ページ（貼り付け先）のHTMLを再生成する\n    await regeneratePage_core( newParentId );\n    //\n    // 子ページのHTMLを再生成する（パンくずリストを更新するため）\n    const children = await listChildrenPage( result.pageId );\n    for( const pageId of children ){\n        await regeneratePage_core( pageId );\n    }\n    //\n    return result;\n","afterCode":"\n"}]