[{"functionId":"test","functionNameJP":"テストコード","functionNameEN":"test","beforeCode":"","innerCode":"\n","afterCode":"","parametersName":[],"parametersDataType":[],"returnValue":"void"},{"functionNameJP":"APIを再生成(予測変換)","functionNameEN":"regenerateAPI_autoCorrect","parametersName":["viewId","tableId","onePageMaxSize","childPageId"],"parametersDataType":["number","string","number","number"],"returnValue":{"viewId":"number","httpMethod":"string","description":"string","commandName":"string","queryParameters":{"string":{"dataType":"string_nullable","description":"string_nullable","isRequired":"boolean_nullable","example":"any","title":"string_nullable","isArray":"boolean_nullable","onePageMaxSize":"number_nullable","children":"any"}},"requestBody":{"string":{"dataType":"string_nullable","description":"string_nullable","isRequired":"boolean_nullable","example":"any","title":"string_nullable","isArray":"boolean_nullable","onePageMaxSize":"number_nullable","children":"any"}},"response":{"string":{"dataType":"string_nullable","description":"string_nullable","example":"any","title":"string_nullable","isArray":"boolean_nullable","onePageMaxSize":"number_nullable","children":"any"}}},"functionId":"01HNHXV97R3V15YY83Q3G55X1X","beforeCode":"\n\n\n","innerCode":"\n    const viewColumns = await listViewColumns( viewId );\n    const requestBody = {};\n    const response = {};\n    for( const { viewColumnId, viewColumnType, columnPath, viewColumnName } of viewColumns ){\n        const columnId = await pathToColumnId( columnPath );\n        // リクエストボディ\n        requestBody[viewColumnId] = {\n            \"dataType\": \"TEXT\",\n            \"description\": viewColumnName,\n            \"isRequired\": false,\n            \"example\": await _getExample_core( viewId, viewColumnId ),\n        };\n        // レスポンス（自動入力）\n        response[viewColumnId] = {\n            \"dataType\": await _getDataType_core( columnId ),\n            \"description\": viewColumnName,\n            \"isRequired\": false,\n            \"example\": await _getExample_core( viewId, viewColumnId ),\n        };\n        // レスポンス（予測変換の候補）\n        response[viewColumnId+\"_option\"] = {\n            \"dataType\": await _getDataType_core( columnId ),\n            \"description\": viewColumnName,\n            \"isRequired\": false,\n            \"example\": await _getExample_core( viewId, viewColumnId ),\n        };\n    }\n    return {\n        \"viewId\": viewId,\n        \"httpMethod\": \"POST\",\n        \"description\": \"予測変換を取得します。\",\n        \"commandName\": \"AUTO_CORRECT\",\n        \"queryParameters\": {},\n        \"requestBody\": requestBody,\n        \"response\": response\n    };\n","afterCode":""},{"functionNameJP":"【サブ関数】入力例を取得","functionNameEN":"_getExample","parametersName":["viewId","viewColumnId"],"parametersDataType":["number","string"],"returnValue":"any","functionId":"01HNMBXG1GK4W3J0AJCSD5ZCAJ","beforeCode":"\n\n\nconst exampleCache = {};\n","innerCode":"\n    return \"---\";\n","afterCode":""},{"functionNameJP":"APIを再生成(CREATE)","functionNameEN":"regenerateAPI_create","parametersName":["viewId","tableId","onePageMaxSize","childPageId"],"parametersDataType":["number","string","number","number"],"returnValue":{"viewId":"number","httpMethod":"string","description":"string","commandName":"string","queryParameters":{"string":{"dataType":"string_nullable","description":"string_nullable","isRequired":"boolean_nullable","example":"any","title":"string_nullable","isArray":"boolean_nullable","onePageMaxSize":"number_nullable","children":"any"}},"requestBody":{"string":{"dataType":"string_nullable","description":"string_nullable","isRequired":"boolean_nullable","example":"any","title":"string_nullable","isArray":"boolean_nullable","onePageMaxSize":"number_nullable","children":"any"}},"response":{"string":{"dataType":"string_nullable","description":"string_nullable","example":"any","title":"string_nullable","isArray":"boolean_nullable","onePageMaxSize":"number_nullable","children":"any"}}},"functionId":"01HNMCKPNJ8QG205YTJZSHX4DA","beforeCode":"\n\n\n","innerCode":"\n    const viewColumns = await listViewColumns( viewId );\n    const requestBody = {};\n    const response = {};\n    for( const { viewColumnId, viewColumnType, columnPath, viewColumnName } of viewColumns ){\n        // リクエストボディ\n        requestBody[viewColumnId] = {\n            \"dataType\": \"TEXT\",\n            \"description\": viewColumnName,\n            \"isRequired\": false,\n            \"example\": await _getExample_core( viewId, viewColumnId ),\n        };\n        // レスポンス（エラーメッセージ）\n        response[viewColumnId+\"_message\"] = {\n            \"dataType\": \"TEXT\",\n            \"description\": \"入力に不備があった際に、テキストボックスの下に表示するメッセージ。\",\n            \"isRequired\": false,\n            \"example\": \"数字ではありません\",\n        };\n    }\n    return {\n        \"viewId\": viewId,\n        \"httpMethod\": \"POST\",\n        \"description\": \"レコードを追加します。\",\n        \"commandName\": \"CREATE_RECORD_FROM_VIEW\",\n        \"queryParameters\": {},\n        \"requestBody\": requestBody,\n        \"response\": {\n            ...response,\n            \"recordId\": {\n                \"dataType\": \"INTEGER\",\n                \"description\": \"新しく生成したレコードのID\",\n                \"example\": 230,\n                \"isRequired\": false,\n            },\n            \"userMessage\": {\n                \"dataType\": \"TEXT\",\n                \"description\": \"成否を表すメッセージ\",\n                \"example\": \"入力内容に不備があったため、登録できませんでした。\",\n                \"isRequired\": false,\n            },\n            \"nextUrl\": {\n                \"dataType\": \"TEXT\",\n                \"description\": \"完了した場合に、移動すべきURL\",\n                \"example\": \"../\",\n                \"isRequired\": false,\n            },\n            \"isSuccess\": {\n                \"dataType\": \"BOOL\",\n                \"description\": \"レコードの追加に成功したか否か\",\n                \"example\": true,\n                \"isRequired\": true,\n            }\n        },\n    };\n","afterCode":""},{"functionNameJP":"APIを再生成(READ)","functionNameEN":"regenerateAPI_read","parametersName":["pageId"],"parametersDataType":["number"],"returnValue":{"pageId":"number","httpMethod":"string","description":"string","commandName":"string","queryParameters":{"string":{"dataType":"string_nullable","description":"string_nullable","isRequired":"boolean_nullable","example":"any","title":"string_nullable","isArray":"boolean_nullable","onePageMaxSize":"number_nullable","children":"any"}},"requestBody":{"string":{"dataType":"string_nullable","description":"string_nullable","isRequired":"boolean_nullable","example":"any","title":"string_nullable","isArray":"boolean_nullable","onePageMaxSize":"number_nullable","children":"any"}},"response":{"string":{"dataType":"string_nullable","description":"string_nullable","example":"any","title":"string_nullable","isArray":"boolean_nullable","onePageMaxSize":"number_nullable","children":"any"}}},"functionId":"01HNMCNNGV7G0G2KA5M6P8Z9G4","beforeCode":"\n\n\n","innerCode":"\n    const response = {};\n    //\n    // ビューの一覧\n    const views = await listChildrenView( pageId );\n    //\n    const queryParameters = {};\n    //\n    for( const { viewId } of views ){\n        queryParameters[`page_view${viewId}_`] = {\n            \"dataType\": \"INTEGER\",\n            \"description\": \"ページ番号。１ページに収まらなかった場合に活用します。このパラメータを2,3,4...と増やすことで、次のページを閲覧できます。\",\n            \"isRequired\": false,\n            \"example\": 1\n        }\n    }\n    //\n    for( const { viewId, tableId, onePageMaxSize, viewType, childPageId } of views ){\n        const viewColumns = await listViewColumns( viewId );\n        const children = {};\n        for( const { viewColumnId, viewColumnType, columnPath, viewColumnName } of viewColumns ){\n            const columnId = await pathToColumnId( columnPath );\n            // レスポンス\n            children[viewColumnId] = {\n                \"dataType\": \"TEXT\",\n                \"description\": viewColumnName,\n                \"isRequired\": false,\n                \"example\": await _getExample_core( viewId, viewColumnId ),\n            };\n            // レスポンス（自動入力）\n            response[viewColumnId] = {\n                \"dataType\": await _getDataType_core( columnId ),\n                \"description\": viewColumnName,\n                \"example\": await _getExample_core( viewId, viewColumnId ),\n                \"isRequired\": false,\n            };\n            // レスポンス（予測変換の候補）\n            response[viewColumnId+\"_option\"] = {\n                \"dataType\": await _getDataType_core( columnId ),\n                \"description\": viewColumnName,\n                \"example\": await _getExample_core( viewId, viewColumnId ),\n                \"isRequired\": false,\n            };\n        }\n        response[\"view\" + viewId + \"_\"] = {\n            \"title\": \"レコードの一覧\",\n            \"isArray\": true,\n            \"onePageMaxSize\": onePageMaxSize,\n            \"children\": {\n                ...children,\n                \"id\": {\n                    \"dataType\": \"INTEGER\",\n                    \"description\": \"レコードID\",\n                    \"example\": 2,\n                    \"isRequired\": true,\n                }\n            }\n        };\n        response[\"view\" + viewId + \"__total\"] = {\n            \"dataType\": \"INTEGER\",\n            \"description\": `view${viewId}の件数`,\n            \"example\": 2000,\n            \"isRequired\": true,\n        };\n    }\n    return {\n        \"pageId\": pageId,\n        \"httpMethod\": \"GET\",\n        \"description\": \"データを１ページぶん取得します。\",\n        \"commandName\": \"GET_PAGE_DATA\",\n        \"queryParameters\": queryParameters,\n        \"requestBody\": {},\n        \"response\": response,\n    };\n","afterCode":""},{"functionNameJP":"APIを再生成(UPDATE)","functionNameEN":"regenerateAPI_update","parametersName":["viewId","tableId","onePageMaxSize","childPageId"],"parametersDataType":["number","string","number","number"],"returnValue":{"viewId":"number","httpMethod":"string","description":"string","commandName":"string","queryParameters":{"string":{"dataType":"string_nullable","description":"string_nullable","isRequired":"boolean_nullable","example":"any","title":"string_nullable","isArray":"boolean_nullable","onePageMaxSize":"number_nullable","children":"any"}},"requestBody":{"string":{"dataType":"string_nullable","description":"string_nullable","isRequired":"boolean_nullable","example":"any","title":"string_nullable","isArray":"boolean_nullable","onePageMaxSize":"number_nullable","children":"any"}},"response":{"string":{"dataType":"string_nullable","description":"string_nullable","example":"any","title":"string_nullable","isArray":"boolean_nullable","onePageMaxSize":"number_nullable","children":"any"}}},"functionId":"01HNMCP8SK8YSQDHRH9R1A6ZDP","beforeCode":"\n\n\n","innerCode":"\n    const viewColumns = await listViewColumns( viewId );\n    const requestBody = {};\n    const response = {};\n    for( const { viewColumnId, viewColumnType, columnPath, viewColumnName } of viewColumns ){\n        // リクエストボディ\n        requestBody[viewColumnId] = {\n            \"dataType\": \"TEXT\",\n            \"description\": viewColumnName,\n            \"isRequired\": false,\n            \"example\": await _getExample_core( viewId, viewColumnId ),\n        };\n        // レスポンス（エラーメッセージ）\n        response[viewColumnId+\"_message\"] = {\n            \"dataType\": \"TEXT\",\n            \"description\": \"入力に不備があった際に、テキストボックスの下に表示するメッセージ。\",\n            \"isRequired\": false,\n            \"example\": \"数字ではありません\",\n        };\n    }\n    return {\n        \"viewId\": viewId,\n        \"httpMethod\": \"POST\",\n        \"description\": \"レコードを上書きします。\",\n        \"commandName\": \"UPDATE_RECORDS\",\n        \"queryParameters\": {},\n        \"requestBody\": {\n            [\"view\" + viewId + \"_\"]: {\n                \"title\": \"レコードの一覧\",\n                \"isArray\": true,\n                \"onePageMaxSize\": onePageMaxSize,\n                \"children\": {\n                    ...requestBody,\n                    \"id\": {\n                        \"dataType\": \"INTEGER\",\n                        \"description\": \"レコードID\",\n                        \"example\": 2,\n                        \"isRequired\": true,\n                    }\n                }\n            },\n        },\n        \"response\": {\n            [\"view\" + viewId + \"_\"]: {\n                \"title\": \"レコードの一覧\",\n                \"isArray\": true,\n                \"onePageMaxSize\": onePageMaxSize,\n                \"children\": {\n                    ...response,\n                    \"id\": {\n                        \"dataType\": \"INTEGER\",\n                        \"description\": \"レコードID\",\n                        \"example\": 2,\n                        \"isRequired\": true,\n                    }\n                }\n            },\n            [\"view\" + viewId + \"__total\"]: {\n                \"dataType\": \"INTEGER\",\n                \"description\": `view${viewId}の件数`,\n                \"example\": onePageMaxSize,\n                \"isRequired\": true,\n            },\n            \"userMessage\": {\n                \"dataType\": \"TEXT\",\n                \"description\": \"完了メッセージ\",\n                \"example\": \"再接続しました。\",\n                \"isRequired\": false,\n            },\n            \"nextUrl\": {\n                \"dataType\": \"TEXT\",\n                \"description\": \"完了した場合に、移動すべきURL\",\n                \"example\": \"../\",\n                \"isRequired\": false,\n            },\n            \"isSuccess\": {\n                \"dataType\": \"BOOL\",\n                \"description\": \"上書きに成功したか否か\",\n                \"example\": true,\n                \"isRequired\": true,\n            }\n        },\n    };\n","afterCode":""},{"functionNameJP":"APIを再生成(DELETE)","functionNameEN":"regenerateAPI_delete","parametersName":["viewId","tableId","onePageMaxSize","childPageId"],"parametersDataType":["number","string","number","number"],"returnValue":{"tableId":"string","httpMethod":"string","description":"string","commandName":"string","queryParameters":{"string":{"dataType":"string_nullable","description":"string_nullable","isRequired":"boolean_nullable","example":"any","title":"string_nullable","isArray":"boolean_nullable","onePageMaxSize":"number_nullable","children":"any"}},"requestBody":{"string":{"dataType":"string_nullable","description":"string_nullable","isRequired":"boolean_nullable","example":"any","title":"string_nullable","isArray":"boolean_nullable","onePageMaxSize":"number_nullable","children":"any"}},"response":{"string":{"dataType":"string_nullable","description":"string_nullable","example":"any","title":"string_nullable","isArray":"boolean_nullable","onePageMaxSize":"number_nullable","children":"any"}}},"functionId":"01HNMCQ72N9X0049DB2AE385V7","beforeCode":"\n\n\n","innerCode":"\n    return {\n        \"tableId\": tableId,\n        \"httpMethod\": \"POST\",\n        \"description\": \"レコードを削除します。\",\n        \"commandName\": \"DELETE_RECORDS\",\n        \"queryParameters\": {},\n        \"requestBody\": {\n            [\"view\" + viewId + \"_\"]: {\n                \"title\": \"レコードの一覧\",\n                \"isArray\": true,\n                \"onePageMaxSize\": onePageMaxSize,\n                \"children\": {\n                    \"id\": {\n                        \"dataType\": \"INTEGER\",\n                        \"description\": \"レコードID\",\n                        \"example\": 2,\n                        \"isRequired\": true,\n                    },\n                    \"checked\": {\n                        \"dataType\": \"BOOL\",\n                        \"description\": \"削除するか否か。削除する場合はtrue、削除しない場合はfalse。\",\n                        \"example\": true,\n                        \"isRequired\": true,\n                    }\n                }\n            },\n        },\n        \"response\": {\n            \"userMessage\": {\n                \"dataType\": \"TEXT\",\n                \"description\": \"完了メッセージ\",\n                \"example\": \"再接続しました。\",\n                \"isRequired\": false,\n            },\n            \"nextUrl\": {\n                \"dataType\": \"TEXT\",\n                \"description\": \"完了した場合に、移動すべきURL\",\n                \"example\": \"../\",\n                \"isRequired\": false,\n            }\n        },\n    };\n","afterCode":""},{"functionNameJP":"【サブ】データ型を取得する関数","functionNameEN":"_getDataType","parametersName":["columnId"],"parametersDataType":["string"],"returnValue":"string","functionId":"01HPZFCGHWH23XQFKE47AQQG65","beforeCode":"\n\n","innerCode":"\n    const dataType = await getDataType( columnId );\n    switch (dataType) {\n        case \"POINTER\":\n            const parentTableId = await getTableId( columnId );\n            const parentColumnId = await getTitleColumnId( parentTableId );\n            return await _getDataType_core( parentColumnId );\n        case \"INTEGER\":\n            return \"INTEGER\";\n        case \"REAL\":\n            return \"REAL\";\n        case \"TEXT\":\n            return \"TEXT\";\n        case \"BOOL\":\n            return \"BOOL\";\n        default:\n            throw `サポートされていないデータ型です。detaType=\"${dataType}\"`;\n    }\n","afterCode":"\n"}]