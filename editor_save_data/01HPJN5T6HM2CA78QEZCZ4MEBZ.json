[{"functionId":"test","functionNameJP":"テストコード","functionNameEN":"test","beforeCode":"","innerCode":"\n    await startUp(\"http://localhost:3000/\", true);\n    //\n    // 「1970/1/1 09:00:00」は日本標準時とする。\n    // また、node.jsが日本標準時であることを自動認識してくれるものとする。\n    const date = new Date(\"1970-1-1 09:00:00\");\n    const timestamp = await getTimestamp( date );\n    // 日本標準時で「1970/1/1 09:00:00」を入力した場合は、\n    // 協定世界時の「1970/1/1 00:00:00」を表すタイムスタンプ「0」をシステム上で扱う。\n    if(timestamp!==0){\n        throw \"サーバー内の時刻が想定外です。\";\n    }\n    //\n    const [{timeText}] = await runSqlReadOnly(`SELECT datetime(0,'unixepoch','localtime') AS timeText;`,{});\n    if(timeText!==\"1970-01-01 09:00:00\"){\n        throw `サーバー内の時刻が想定外です。\\n現実 ${timeText}`;\n    }\n    //\n    const inputTexts = [\n        \"2007-05-19 12:56:00\",\n        \"1950-11-03 08:24:51\",\n        \"2005-08-17 15:40:22\",\n        \"2014-02-28 19:12:05\",\n        \"1960-06-11 10:35:44\",\n        \"2066-10-29 04:58:33\",\n        \"2018-04-06 21:07:16\",\n        \"2100-09-25 07:53:59\",\n        \"2008-12-14 23:19:28\",\n        \"2012-07-08 13:46:37\",\n    ];\n    for( const inputText of inputTexts ){\n        const timestamp = await getTimestamp( new Date(inputText) );\n        if( isNaN(timestamp) ){\n            throw `サーバー内の時刻が想定外です。\\nタイムスタンプ ${timestamp}`;\n        }\n        const matrix = await runSqlReadOnly(\n            `SELECT strftime( '%Y-%m-%d %H:%M:%S', :timestamp / 1000, 'unixepoch', 'localtime' ) AS timeText;`,\n            {\n                \":timestamp\": timestamp,\n            }\n        );\n        if( matrix[0][\"timeText\"] !== inputText ){\n            throw `サーバー内の時刻が想定外です。\\n理想 ${inputText}\\n現実 ${JSON.stringify(matrix,null,2)}`;\n        }\n    }\n    await close();\n","afterCode":"","parametersName":[],"parametersDataType":[],"returnValue":"void"},{"functionNameJP":"協定世界時(UTC)のタイムスタンプを取得する","functionNameEN":"getTimestamp","parametersName":["dateObject"],"parametersDataType":["any"],"returnValue":"number","functionId":"01HPJN8QR3XKJJ5GGMNGQZ7X3C","beforeCode":"\n\n\n\n","innerCode":"\n    if(!dateObject){\n        dateObject = new Date();\n    }\n    return dateObject.getTime();\n","afterCode":"\n"}]